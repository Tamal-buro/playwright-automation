name: 'Playwright Tests'
description: 'GitHub Action for running Playwright end-to-end tests'
inputs:
  test_name:
    description: 'Name of the running test'
    required: true
  integration_folder:
    description: 'Path of project to run'
    required: true
  node_auth_token:
    description: 'NPM Authentication Token'
    required: true
  datadog_api_key:
    description: 'Datadog API Key for sending metrics'
    required: true
  CHARGEBEE_SECRET_KEY_STAG:
    description: 'Chargebee secret key'
    required: true
  USER_PLATFORM_GATEWAY_API_KEY_STAG:
    description: 'Chargebee user platform gateway key'
    required: true
  X_CLIENT_KEY_STAG:
    description: 'User platform client key'
    required: true
  SLACK_WEBHOOK_URL:
    description: 'Slack URL of the channel where the test results are published'
    required: true
  AIO_SECRET_KEY:
    description: 'AIO platform client key'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install Dependencies
      uses: actions/setup-node@v4
      with:
        node-version: 18.16.0
        registry-url: https://registry.npmjs.org/
        cache: 'npm'
    
    # Cache node_modules based on package-lock.json
    - name: Cache node dependencies
      uses: actions/cache@v4
      id: node-cache
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    # Install dependencies only if cache miss
    - name: Install dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      shell: bash
      run: npm ci --always-auth=true --no-optional
      env:
        NODE_AUTH_TOKEN: ${{inputs.node_auth_token}}
    
    # Cache Playwright browsers
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
          **/node_modules/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
    
    # Install Playwright browsers only if cache miss
    - name: Install Playwright Browsers
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      shell: bash
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      id: playwright
      shell: bash
      run: |
        npx playwright test tests/${{inputs.integration_folder}} --reporter=html
      env:
        APP_ENV: 'test_development_staging'
        CHARGEBEE_SECRET_KEY_STAG: '${{inputs.CHARGEBEE_SECRET_KEY_STAG}}'
      
    - name: Get current time
      if: always()
      uses: josStorer/get-current-time@v2
      id: current-time
      with:
        format: YYYYMMDD-HH
        utcOffset: '+05:30'
    
    - name: Upload HTML report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{inputs.integration_folder}}-${{steps.current-time.outputs.formattedTime}}
        path: playwright-report/
        retention-days: 3
