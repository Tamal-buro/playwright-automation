name: Scheduled Playwright Tests
on:
  push:
  workflow_dispatch:
    inputs:
      parallel-workers:
        description: 'Number of parallel workers per folder'
        required: false
        default: '2'
        type: choice
        options:
          - '1'
          - '2'
          - '3'
          - '4'

jobs:
  test:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    env:
      CHARGEBEE_SECRET_KEY_STAG: ${{secrets.CHARGEBEE_SECRET_KEY_STAG}}
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Cache node dependencies
      uses: actions/cache@v4
      id: node-cache
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
          **/node_modules/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-playwright-

    - name: Install Playwright Browsers
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps
      
    - name: Find all test folders
      id: find-folders
      run: |
        FOLDERS=$(find tests -mindepth 1 -maxdepth 1 -type d | cut -d'/' -f2 | tr '\n' ',' | sed 's/,$//')
        echo "Found test folders: $FOLDERS"
        echo "folders=$FOLDERS" >> $GITHUB_OUTPUT
        
    - name: Run all test folders in parallel
      env:
        PARALLEL_WORKERS: ${{ github.event.inputs.parallel-workers || '2' }}
      run: |
        IFS=',' read -ra FOLDERS <<< "${{ steps.find-folders.outputs.folders }}"
        
        # Create an array to store process IDs
        declare -a pids=()
        
        # Start each folder's tests in parallel
        for folder in "${FOLDERS[@]}"; do
          echo "Starting tests for folder: $folder"
          npx playwright test tests/$folder/ --workers=$PARALLEL_WORKERS &
          pids+=($!)
        done
        
        # Wait for all processes and capture exit codes
        exit_code=0
        for pid in "${pids[@]}"; do
          wait $pid || {
            echo "Process $pid failed with exit code $?"
            exit_code=1
          }
        done
        
        exit $exit_code
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        
    - name: Send notification on failure
      if: failure()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "❌ Daily Playwright tests failed! Check the report: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}